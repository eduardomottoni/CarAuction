// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.API.Data;

#nullable disable

namespace Web.API.Migrations
{
    [DbContext(typeof(CarAuctionContext))]
    [Migration("20250325145608_MakingOnlyOneTableForVehicles")]
    partial class MakingOnlyOneTableForVehicles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web.API.Models.Auction", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("CurrentBid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Auctions");

                    b.HasData(
                        new
                        {
                            ID = "A1",
                            CurrentBid = 37500m,
                            EndDate = new DateTime(2025, 3, 30, 14, 56, 7, 362, DateTimeKind.Local).AddTicks(123),
                            IsActive = true,
                            StartDate = new DateTime(2025, 3, 20, 14, 56, 7, 359, DateTimeKind.Local).AddTicks(5557),
                            VehicleID = "V1"
                        },
                        new
                        {
                            ID = "A2",
                            CurrentBid = 175000m,
                            EndDate = new DateTime(2025, 4, 1, 14, 56, 7, 362, DateTimeKind.Local).AddTicks(435),
                            IsActive = true,
                            StartDate = new DateTime(2025, 3, 22, 14, 56, 7, 362, DateTimeKind.Local).AddTicks(426),
                            VehicleID = "V3"
                        },
                        new
                        {
                            ID = "A3",
                            CurrentBid = 78000m,
                            EndDate = new DateTime(2025, 4, 2, 14, 56, 7, 362, DateTimeKind.Local).AddTicks(439),
                            IsActive = true,
                            StartDate = new DateTime(2025, 3, 23, 14, 56, 7, 362, DateTimeKind.Local).AddTicks(438),
                            VehicleID = "V5"
                        },
                        new
                        {
                            ID = "A4",
                            CurrentBid = 265000m,
                            EndDate = new DateTime(2025, 4, 3, 14, 56, 7, 362, DateTimeKind.Local).AddTicks(443),
                            IsActive = true,
                            StartDate = new DateTime(2025, 3, 24, 14, 56, 7, 362, DateTimeKind.Local).AddTicks(442),
                            VehicleID = "V8"
                        },
                        new
                        {
                            ID = "A5",
                            CurrentBid = 125000m,
                            EndDate = new DateTime(2025, 4, 4, 14, 56, 7, 362, DateTimeKind.Local).AddTicks(447),
                            IsActive = true,
                            StartDate = new DateTime(2025, 3, 25, 14, 56, 7, 362, DateTimeKind.Local).AddTicks(446),
                            VehicleID = "V10"
                        });
                });

            modelBuilder.Entity("Web.API.Models.Vehicle", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoadCapacity")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<decimal>("StartingBid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            ID = "V1",
                            Manufacturer = "Tesla",
                            Model = "Model 3",
                            NumberOfDoors = 4,
                            StartingBid = 35000m,
                            Type = "Sedan",
                            Year = "2023"
                        },
                        new
                        {
                            ID = "V2",
                            LoadCapacity = "2000 lbs",
                            Manufacturer = "Ford",
                            Model = "F-150",
                            StartingBid = 45000m,
                            Type = "Truck",
                            Year = "2022"
                        },
                        new
                        {
                            ID = "V3",
                            Manufacturer = "Porsche",
                            Model = "911 GT3",
                            NumberOfDoors = 2,
                            StartingBid = 165000m,
                            Type = "Hatchback",
                            Year = "2023"
                        },
                        new
                        {
                            ID = "V4",
                            LoadCapacity = "2500 lbs",
                            Manufacturer = "Chevrolet",
                            Model = "Silverado",
                            StartingBid = 42000m,
                            Type = "Truck",
                            Year = "2022"
                        },
                        new
                        {
                            ID = "V5",
                            Manufacturer = "BMW",
                            Model = "M3 Competition",
                            NumberOfDoors = 4,
                            StartingBid = 75000m,
                            Type = "Sedan",
                            Year = "2023"
                        },
                        new
                        {
                            ID = "V6",
                            Manufacturer = "Land Rover",
                            Model = "Range Rover Sport",
                            NumberOfSeats = 5,
                            StartingBid = 85000m,
                            Type = "SUV",
                            Year = "2023"
                        },
                        new
                        {
                            ID = "V7",
                            LoadCapacity = "3500 lbs",
                            Manufacturer = "Tesla",
                            Model = "Cybertruck",
                            StartingBid = 55000m,
                            Type = "Truck",
                            Year = "2024"
                        },
                        new
                        {
                            ID = "V8",
                            Manufacturer = "Lamborghini",
                            Model = "Huracan",
                            NumberOfDoors = 2,
                            StartingBid = 250000m,
                            Type = "Hatchback",
                            Year = "2023"
                        },
                        new
                        {
                            ID = "V9",
                            LoadCapacity = "1600 lbs",
                            Manufacturer = "Toyota",
                            Model = "Tacoma TRD Pro",
                            StartingBid = 48000m,
                            Type = "Truck",
                            Year = "2023"
                        },
                        new
                        {
                            ID = "V10",
                            Manufacturer = "Tesla",
                            Model = "Model X Plaid",
                            NumberOfSeats = 7,
                            StartingBid = 120000m,
                            Type = "SUV",
                            Year = "2023"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
